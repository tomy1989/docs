{
  "openapi": "3.1.0",
  "info": {
    "title": "MegaSend API",
    "description": "Professional WhatsApp Business API for seamless messaging automation and customer engagement",
    "version": "2.0.0"
  },
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login",
        "description": "Authenticate user and return access & refresh tokens.",
        "operationId": "login_auth_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_auth_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login/credentials": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login with JSON",
        "description": "Use this endpoint for JSON-based authentication (typically used by API clients)",
        "operationId": "login_json_auth_login_credentials_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginCredentials"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refresh",
        "description": "Refresh access token using refresh token.",
        "operationId": "refresh_auth_refresh_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logout",
        "description": "Logout user and invalidate refresh token.",
        "operationId": "logout_auth_logout_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get Current User",
        "description": "Retrieve current logged-in user's info.",
        "operationId": "get_current_user_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/subscriptions/": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get Subscription Plans",
        "description": "Retrieve all active subscription plans with full Stripe integration.",
        "operationId": "get_subscription_plans_subscriptions__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get Subscription Plans Subscriptions  Get"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/me/stats": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get My Subscription Stats",
        "description": "Retrieve detailed subscription statistics for the current user.",
        "operationId": "get_my_subscription_stats_subscriptions_me_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get My Subscription Stats Subscriptions Me Stats Get"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/me/change-plan": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Change My Subscription Plan",
        "description": "Change the current user's subscription plan with automatic overage price mapping.\nThis replaces the Stripe Portal functionality with controlled backend logic.",
        "operationId": "change_my_subscription_plan_subscriptions_me_change_plan_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePlanRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Change My Subscription Plan Subscriptions Me Change Plan Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/me/preview-plan-change": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Preview Plan Change",
        "description": "Preview the costs and changes for a plan change before applying it.",
        "operationId": "preview_plan_change_subscriptions_me_preview_plan_change_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanChangePreviewRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Preview Plan Change Subscriptions Me Preview Plan Change Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Current User Details",
        "description": "Get the currently logged-in user's details.",
        "operationId": "get_current_user_details_users_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update Current User",
        "description": "Update the currently logged-in user's details.",
        "operationId": "update_current_user_users_me_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeUserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete Current User",
        "description": "Delete currently authenticated user",
        "operationId": "delete_current_user_users_me_delete",
        "responses": {
          "204": {
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/users/me/password": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update Current User Password",
        "description": "Allow the currently authenticated user to update their password.\nRequires current_password validation.",
        "operationId": "update_current_user_password_users_me_password_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/instances/me": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "List My Instances",
        "description": "List all instances belonging to the currently authenticated user.",
        "operationId": "list_my_instances_instances_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/InstanceResponse"
                  },
                  "type": "array",
                  "title": "Response List My Instances Instances Me Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Instances"
        ],
        "summary": "Create My Instance",
        "description": "Create a new instance for the current user, subject to subscription plan limits.",
        "operationId": "create_my_instance_instances_me_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/instances/me/{instance_id}": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Get My Instance",
        "description": "Retrieve a specific instance belonging to the current user.",
        "operationId": "get_my_instance_instances_me__instance_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Instances"
        ],
        "summary": "Update My Instance",
        "description": "Update a specific instance belonging to the current user.",
        "operationId": "update_my_instance_instances_me__instance_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Instances"
        ],
        "summary": "Delete My Instance",
        "description": "Delete a specific instance belonging to the current user.",
        "operationId": "delete_my_instance_instances_me__instance_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instances/facebook_keys": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Get Facebook Keys",
        "description": "Retrieve active Facebook OAuth tokens (FAKeys) for the current user,\nsorted by creation date (most recent first).\n\nReturns a list of tokens with metadata but without the actual token values.\nTo access the decrypted token values, use the /facebook_keys/{key_id}/reveal endpoint.",
        "operationId": "get_facebook_keys_instances_facebook_keys_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Facebook Keys Instances Facebook Keys Get"
                }
              }
            }
          }
        }
      }
    },
    "/instances/facebook_keys/with_tokens": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Get Facebook Keys With Tokens",
        "description": "Retrieve active Facebook OAuth tokens (FAKeys) for the current user,\nincluding the decrypted token values.\n\nThis endpoint requires the same authorization as the token reveal endpoint\nand should be used with caution as it exposes sensitive credentials.",
        "operationId": "get_facebook_keys_with_tokens_instances_facebook_keys_with_tokens_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Facebook Keys With Tokens Instances Facebook Keys With Tokens Get"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instance_id}/phone_numbers": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Get Instance Phone Numbers",
        "description": "Retrieve available WhatsApp phone numbers for a given instance.\n\nThe endpoint uses the instance's API token and business_account_id\nto query the Facebook Graph API for phone numbers.",
        "operationId": "get_instance_phone_numbers_instances__instance_id__phone_numbers_get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instance_id}/business_profile": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Get Business Profile Route",
        "description": "Retrieve the business profile of the WhatsApp Business account associated with the instance.",
        "operationId": "get_business_profile_route_instances__instance_id__business_profile_get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Instances"
        ],
        "summary": "Update Business Profile Route",
        "description": "Update the business profile of the WhatsApp Business account associated with the instance.",
        "operationId": "update_business_profile_route_instances__instance_id__business_profile_put",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBusinessProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instance_id}/business_phone_number": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Get Business Phone Number Route",
        "description": "Retrieve the business phone number of the WhatsApp Business account \nassociated with the instance.",
        "operationId": "get_business_phone_number_route_instances__instance_id__business_phone_number_get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instance_id}/commerce_settings": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Get Commerce Settings Route",
        "description": "Retrieve the commerce settings of the WhatsApp Business account associated with the instance.",
        "operationId": "get_commerce_settings_route_instances__instance_id__commerce_settings_get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Instances"
        ],
        "summary": "Update Commerce Settings Route",
        "description": "Update the commerce settings of the WhatsApp Business account associated with the instance.\nOnly the fields provided in the payload will be updated.",
        "operationId": "update_commerce_settings_route_instances__instance_id__commerce_settings_put",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommerceSettingsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instance_id}/app_access_token": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Get App Access Token Route",
        "description": "Retrieve the app access token using the instance credentials.",
        "operationId": "get_app_access_token_route_instances__instance_id__app_access_token_get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instance_id}/app_callback": {
      "post": {
        "tags": [
          "Instances"
        ],
        "summary": "Set App Callback Url Route",
        "description": "Set the callback URL for the webhook at the app level.",
        "operationId": "set_app_callback_url_route_instances__instance_id__app_callback_post",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppCallbackSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instance_id}/waba_callback/override": {
      "post": {
        "tags": [
          "Instances"
        ],
        "summary": "Override Waba Callback Url Route",
        "description": "Override the callback URL for the WhatsApp Business Account.",
        "operationId": "override_waba_callback_url_route_instances__instance_id__waba_callback_override_post",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WabaCallbackOverride"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instance_id}/waba_callback": {
      "delete": {
        "tags": [
          "Instances"
        ],
        "summary": "Delete Waba Callback Url Route",
        "description": "Delete the callback URL for the WhatsApp Business Account.",
        "operationId": "delete_waba_callback_url_route_instances__instance_id__waba_callback_delete",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WabaCallbackDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instance_id}/phone_callback/override": {
      "post": {
        "tags": [
          "Instances"
        ],
        "summary": "Override Phone Callback Url Route",
        "description": "Override the callback URL for a specific phone.",
        "operationId": "override_phone_callback_url_route_instances__instance_id__phone_callback_override_post",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneCallbackOverride"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instance_id}/phone_callback": {
      "delete": {
        "tags": [
          "Instances"
        ],
        "summary": "Delete Phone Callback Url Route",
        "description": "Delete the callback URL for a specific phone.",
        "operationId": "delete_phone_callback_url_route_instances__instance_id__phone_callback_delete",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneCallbackDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instances/facebook_keys/{key_id}/reveal": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Reveal Token",
        "description": "Reveal the decrypted Facebook OAuth token for the specified key.\nOnly the token owner is authorized to view the decrypted token.",
        "operationId": "reveal_token_instances_facebook_keys__key_id__reveal_get",
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Key Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/access-tokens/me": {
      "get": {
        "tags": [
          "Access Tokens"
        ],
        "summary": "List My Tokens",
        "description": "List all access tokens belonging to the current user.",
        "operationId": "list_my_tokens_access_tokens_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AccessTokenResponse"
                  },
                  "type": "array",
                  "title": "Response List My Tokens Access Tokens Me Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Access Tokens"
        ],
        "summary": "Create My Token",
        "description": "Create a new access token for the current user.\nOptionally set a description or expires_at.",
        "operationId": "create_my_token_access_tokens_me_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessTokenCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/access-tokens/me/logs": {
      "get": {
        "tags": [
          "Access Tokens"
        ],
        "summary": "List your access token logs with optional pagination.",
        "description": "Retrieve access token logs *for the currently authenticated user*.\nSupports optional filtering by a specific token ID, plus pagination.",
        "operationId": "get_my_access_token_logs_access_tokens_me_logs_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "token_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter logs by a specific token ID",
              "title": "Token Id"
            },
            "description": "Filter logs by a specific token ID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "description": "Page number (starts at 1)",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number (starts at 1)"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "exclusiveMinimum": 0,
              "description": "Number of items per page (max=100)",
              "default": 10,
              "title": "Page Size"
            },
            "description": "Number of items per page (max=100)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenLogPaginatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/access-tokens/me/{token_id}": {
      "get": {
        "tags": [
          "Access Tokens"
        ],
        "summary": "Get My Token",
        "description": "Retrieve a specific token (owned by current user).",
        "operationId": "get_my_token_access_tokens_me__token_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Access Tokens"
        ],
        "summary": "Update My Token",
        "description": "Update an existing token (owned by current user).\nE.g., update description, expiry, or active status.",
        "operationId": "update_my_token_access_tokens_me__token_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessTokenUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Access Tokens"
        ],
        "summary": "Delete My Token",
        "description": "Delete an existing token (owned by current user).",
        "operationId": "delete_my_token_access_tokens_me__token_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/access-tokens/me/{token_id}/refresh": {
      "post": {
        "tags": [
          "Access Tokens"
        ],
        "summary": "Refresh My Token",
        "description": "Regenerate the token_value for an existing token (owned by current user).",
        "operationId": "refresh_my_token_access_tokens_me__token_id__refresh_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/messages/send": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Send Message",
        "description": "Send a WhatsApp message using the user's instance.",
        "operationId": "send_message_messages_send_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/messages/send-bulk": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Send Bulk Messages",
        "description": "Send WhatsApp messages to multiple recipients using the user's instance.\n\nMaximum 10 recipients allowed.",
        "operationId": "send_bulk_messages_messages_send_bulk_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkSendMessageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkSendMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/messages/responses": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Get Message Responses",
        "description": "Retrieve paginated message responses for a specific instance.\nOnly returns messages for instances owned by the authenticated user.\nFilter by source to get messages from specific integrations (e.g., 'shopify').",
        "operationId": "get_message_responses_messages_responses_get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/MessageStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "message_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/MessageType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Message Type"
            }
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 10,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/templates/{instance_id}/create": {
      "post": {
        "tags": [
          "Templates"
        ],
        "summary": "Create New Template",
        "description": "Create a new message template in Meta's WhatsApp Cloud system\nassociated with a given instance_id.",
        "operationId": "create_new_template_templates__instance_id__create_post",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTemplateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTemplateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/templates/{instance_id}/list": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "List Templates For Instance",
        "description": "List all templates from Meta for the given instance's business_account_id.\nOptional 'status' query param to filter by APPROVED, REJECTED, etc.",
        "operationId": "list_templates_for_instance_templates__instance_id__list_get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by template status e.g. 'APPROVED', 'REJECTED'",
              "title": "Status"
            },
            "description": "Filter by template status e.g. 'APPROVED', 'REJECTED'"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTemplatesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/templates/{instance_id}/update/{template_id}": {
      "post": {
        "tags": [
          "Templates"
        ],
        "summary": "Update Existing Template",
        "description": "Update an existing template by ID. \nThis can modify category or components.",
        "operationId": "update_existing_template_templates__instance_id__update__template_id__post",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTemplateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Update Existing Template Templates  Instance Id  Update  Template Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/templates/{instance_id}/delete": {
      "delete": {
        "tags": [
          "Templates"
        ],
        "summary": "Delete Template For Instance",
        "description": "Delete a template by name, or by id+name. \nThe API requires at least name, or name+hsm_id.",
        "operationId": "delete_template_for_instance_templates__instance_id__delete_delete",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "template_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Template Name"
            }
          },
          {
            "name": "template_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Template For Instance Templates  Instance Id  Delete Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/facebook/login": {
      "get": {
        "tags": [
          "Facebook"
        ],
        "summary": "Login With Facebook",
        "description": "Redirect user to Facebook OAuth login while passing user ID in `state`.",
        "operationId": "login_with_facebook_facebook_login_get",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/facebook/callback": {
      "get": {
        "tags": [
          "Facebook"
        ],
        "summary": "Facebook Callback",
        "description": "Handle Facebook OAuth callback, extract user ID from `state`, and store the access token in fa_keys.",
        "operationId": "facebook_callback_facebook_callback_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/facebook/whatsapp/onboard": {
      "post": {
        "tags": [
          "Facebook"
        ],
        "summary": "Onboard Whatsapp",
        "description": "Handle WhatsApp Embedded Signup callback from frontend.\nReceives code, waba_id, and phone_number_id, exchanges code for access token,\nand stores token in FAKeys table.",
        "operationId": "onboard_whatsapp_facebook_whatsapp_onboard_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/business/businesses": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "Get Businesses",
        "description": "Retrieve the list of Facebook businesses for the authenticated user.\n\nThis endpoint uses the most recent active (non-expired) Facebook token stored in the FAKeys table \nto call Facebook's API endpoint (https://graph.facebook.com/v22.0/me/businesses). \nIt returns the original JSON response from Facebook.",
        "operationId": "get_businesses_business_businesses_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/business/businesses/{business_account_id}/phone_numbers": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "Get Business Phone Numbers",
        "description": "Retrieve phone numbers for the given Facebook business account.\n\nThis endpoint uses the most recent active (non-expired) Facebook token stored in the FAKeys table \nto call Facebook's API endpoint (https://graph.facebook.com/v22.0/{business_account_id}/phone_numbers). \nIt returns the original JSON response from Facebook.",
        "operationId": "get_business_phone_numbers_business_businesses__business_account_id__phone_numbers_get",
        "parameters": [
          {
            "name": "business_account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Business Account Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/chats/{instance_id}": {
      "get": {
        "tags": [
          "Chats"
        ],
        "summary": "Get Conversations",
        "description": "Get all chat conversations for an instance with pagination and search.\n\nReturns conversations sorted by most recent activity, including:\n- Contact information\n- Last message details\n- Unread message count\n- Customer service window status",
        "operationId": "get_conversations_chats__instance_id__get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number (1-based)",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of conversations per page",
              "default": 20,
              "title": "Per Page"
            },
            "description": "Number of conversations per page"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search query for contact name or phone",
              "title": "Search"
            },
            "description": "Search query for contact name or phone"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/chats/{instance_id}/contact/{contact_phone}/messages": {
      "get": {
        "tags": [
          "Chats"
        ],
        "summary": "Get Conversation Messages Endpoint",
        "description": "Get messages for a specific conversation with pagination support.\n\nSupports both regular pagination and infinite scroll (using before_timestamp).\nReturns messages sorted chronologically (oldest first).",
        "operationId": "get_conversation_messages_endpoint_chats__instance_id__contact__contact_phone__messages_get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "contact_phone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Contact Phone"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number (1-based)",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of messages per page",
              "default": 50,
              "title": "Per Page"
            },
            "description": "Number of messages per page"
          },
          {
            "name": "before_timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Load messages before this timestamp (for infinite scroll)",
              "title": "Before Timestamp"
            },
            "description": "Load messages before this timestamp (for infinite scroll)"
          },
          {
            "name": "search_query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search within conversation messages",
              "title": "Search Query"
            },
            "description": "Search within conversation messages"
          },
          {
            "name": "search_highlight",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to return text highlighting information",
              "default": true,
              "title": "Search Highlight"
            },
            "description": "Whether to return text highlighting information"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationMessagesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/chats/{instance_id}/contact/{contact_phone}/send": {
      "post": {
        "tags": [
          "Chats"
        ],
        "summary": "Send Message To Contact",
        "description": "Send a message to a specific contact with business rules enforcement.\n\nThis endpoint:\n1. Checks if the customer service window is open\n2. Enforces template usage when required\n3. Sends the message via WhatsApp\n4. Broadcasts the new message via WebSocket to connected users",
        "operationId": "send_message_to_contact_chats__instance_id__contact__contact_phone__send_post",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "contact_phone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Contact Phone"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/chats/{instance_id}/contact/{contact_phone}/mark-read": {
      "post": {
        "tags": [
          "Chats"
        ],
        "summary": "Mark Conversation Read",
        "description": "Mark all messages in a conversation as read.",
        "operationId": "mark_conversation_read_chats__instance_id__contact__contact_phone__mark_read_post",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "contact_phone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Contact Phone"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/chats/{instance_id}/contact/{contact_phone}/status": {
      "get": {
        "tags": [
          "Chats"
        ],
        "summary": "Get Conversation Status",
        "description": "Get the status of a conversation including customer service window information.",
        "operationId": "get_conversation_status_chats__instance_id__contact__contact_phone__status_get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "contact_phone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Contact Phone"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/chats/{instance_id}/contact/{contact_id}": {
      "get": {
        "tags": [
          "Chats"
        ],
        "summary": "Get Chat Messages Legacy",
        "description": "Legacy endpoint for backward compatibility.\nRedirects to the new messages endpoint.",
        "operationId": "get_chat_messages_legacy_chats__instance_id__contact__contact_id__get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Contact Id"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/predefined-templates/with-status/{instance_id}": {
      "get": {
        "tags": [
          "Predefined Templates"
        ],
        "summary": "Get Templates With Installation Status",
        "description": "Get paginated list of predefined templates with installation status for a specific instance.",
        "operationId": "get_templates_with_installation_status_predefined_templates_with_status__instance_id__get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Instance ID to check installation status",
              "title": "Instance Id"
            },
            "description": "Instance ID to check installation status"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Items per page",
              "default": 20,
              "title": "Size"
            },
            "description": "Items per page"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TemplateCategory"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by template category",
              "title": "Category"
            },
            "description": "Filter by template category"
          },
          {
            "name": "meta_category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/MetaTemplateCategory"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by Meta category",
              "title": "Meta Category"
            },
            "description": "Filter by Meta category"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by language",
              "title": "Language"
            },
            "description": "Filter by language"
          },
          {
            "name": "has_name_param",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by whether template has name parameter",
              "title": "Has Name Param"
            },
            "description": "Filter by whether template has name parameter"
          },
          {
            "name": "has_dynamic_url",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by whether template has dynamic URL",
              "title": "Has Dynamic Url"
            },
            "description": "Filter by whether template has dynamic URL"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search in template name, description, and body text",
              "title": "Search"
            },
            "description": "Search in template name, description, and body text"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by tags",
              "title": "Tags"
            },
            "description": "Filter by tags"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/predefined-templates/categories/list": {
      "get": {
        "tags": [
          "Predefined Templates"
        ],
        "summary": "Get Template Categories",
        "description": "Get list of available template categories and Meta categories.",
        "operationId": "get_template_categories_predefined_templates_categories_list_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "type": "object",
                  "title": "Response Get Template Categories Predefined Templates Categories List Get"
                }
              }
            }
          }
        }
      }
    },
    "/predefined-templates/background-init-status": {
      "get": {
        "tags": [
          "Predefined Templates"
        ],
        "summary": "Get Template Init Status",
        "description": "Get the status of background WhatsApp template initialization.\n\nThis endpoint can be used to check if the template initialization\nhas completed after API startup.",
        "operationId": "get_template_init_status_predefined_templates_background_init_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/predefined-templates/trigger-background-init": {
      "post": {
        "tags": [
          "Predefined Templates"
        ],
        "summary": "Trigger Background Template Init",
        "description": "Manually trigger background WhatsApp template initialization.\n\nThis endpoint can be used to restart the initialization process\nif it failed or needs to be run again. Requires authentication.",
        "operationId": "trigger_background_template_init_predefined_templates_trigger_background_init_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/contacts": {
      "post": {
        "tags": [
          "contacts"
        ],
        "summary": "Create Contact",
        "description": "Create a new contact.",
        "operationId": "create_contact_contacts_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "contacts"
        ],
        "summary": "Get Contacts",
        "description": "Get paginated list of contacts.",
        "operationId": "get_contacts_contacts_get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Instance Id"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "blocked_only",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Blocked Only"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "exclusiveMinimum": 0,
              "default": 10,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedContactResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}": {
      "get": {
        "tags": [
          "contacts"
        ],
        "summary": "Get Contact",
        "description": "Get a specific contact by ID.",
        "operationId": "get_contact_contacts__contact_id__get",
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Contact Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "contacts"
        ],
        "summary": "Update Contact",
        "description": "Update a contact's information.",
        "operationId": "update_contact_contacts__contact_id__put",
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Contact Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "contacts"
        ],
        "summary": "Delete Contact",
        "description": "Soft delete a contact.",
        "operationId": "delete_contact_contacts__contact_id__delete",
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Contact Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/updates": {
      "post": {
        "tags": [
          "contacts"
        ],
        "summary": "Create Contact Update",
        "description": "Create a new update for a contact.",
        "operationId": "create_contact_update_contacts__contact_id__updates_post",
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Contact Id"
            }
          },
          {
            "name": "instance_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdateCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "contacts"
        ],
        "summary": "Get Contact Updates",
        "description": "Get paginated list of updates for a contact.",
        "operationId": "get_contact_updates_contacts__contact_id__updates_get",
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Contact Id"
            }
          },
          {
            "name": "instance_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Instance Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "exclusiveMinimum": 0,
              "default": 10,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedContactUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/updates/{update_id}": {
      "delete": {
        "tags": [
          "contacts"
        ],
        "summary": "Delete Contact Update",
        "description": "Soft delete a contact update.",
        "operationId": "delete_contact_update_contacts__contact_id__updates__update_id__delete",
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Contact Id"
            }
          },
          {
            "name": "update_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Update Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/unsubscribe/create": {
      "post": {
        "tags": [
          "Unsubscribe"
        ],
        "summary": "Create Unsubscribe Code By Phone",
        "description": "Create an unsubscribe code for a phone number and instance.\n\nThis endpoint validates:\n- Phone number format (E.164)\n- Instance ownership by the authenticated user\n- Creates contact if it doesn't exist\n- Generates or reuses existing unsubscribe code\n\nThe contact creation behavior depends on the source:\n- If source is provided (e.g., 'shopify'), contact name includes source\n- Notes indicate the source of contact creation",
        "operationId": "create_unsubscribe_code_by_phone_unsubscribe_create_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUnsubscribeCodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUnsubscribeCodeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/unsubscribe/{code}": {
      "get": {
        "tags": [
          "Unsubscribe"
        ],
        "summary": "Unsubscribe Public",
        "description": "Public unsubscribe endpoint that processes unsubscribe codes.\nRedirects to a success page after processing.",
        "operationId": "unsubscribe_public_unsubscribe__code__get",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/unsubscribe/process/{code}": {
      "post": {
        "tags": [
          "Unsubscribe"
        ],
        "summary": "Process Unsubscribe Api",
        "description": "API endpoint for processing unsubscribe codes.\nReturns JSON response for API consumers.",
        "operationId": "process_unsubscribe_api_unsubscribe_process__code__post",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsubscribeProcessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/unsubscribe/contact/{contact_id}/code": {
      "get": {
        "tags": [
          "Unsubscribe"
        ],
        "summary": "Get Contact Unsubscribe Code",
        "description": "Get or create an unsubscribe code for a specific contact.\nReuses existing codes if available.",
        "operationId": "get_contact_unsubscribe_code_unsubscribe_contact__contact_id__code_get",
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Contact Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsubscribeCodeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/unsubscribe/contact/{contact_id}/block": {
      "post": {
        "tags": [
          "Unsubscribe"
        ],
        "summary": "Block Contact Endpoint",
        "description": "Block a contact manually from the contact management interface.",
        "operationId": "block_contact_endpoint_unsubscribe_contact__contact_id__block_post",
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Contact Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockContactRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactBlockResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/unsubscribe/contact/{contact_id}/unblock": {
      "post": {
        "tags": [
          "Unsubscribe"
        ],
        "summary": "Unblock Contact Endpoint",
        "description": "Unblock a contact manually from the contact management interface.",
        "operationId": "unblock_contact_endpoint_unsubscribe_contact__contact_id__unblock_post",
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Contact Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnblockContactRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactBlockResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/registration/register": {
      "post": {
        "tags": [
          "Registration"
        ],
        "summary": "Register New User",
        "description": "Submit a registration request with Turnstile verification",
        "operationId": "register_user_registration_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/meta/analytics/{instance_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Messaging Analytics",
        "description": "Get messaging analytics (messages sent/delivered) from Meta",
        "operationId": "get_messaging_analytics_analytics_meta_analytics__instance_id__get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Start timestamp (Unix)",
              "title": "Start"
            },
            "description": "Start timestamp (Unix)"
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End timestamp (Unix)",
              "title": "End"
            },
            "description": "End timestamp (Unix)"
          },
          {
            "name": "granularity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Granularity: HALF_HOUR, DAILY, MONTHLY",
              "default": "DAILY",
              "title": "Granularity"
            },
            "description": "Granularity: HALF_HOUR, DAILY, MONTHLY"
          },
          {
            "name": "phone_numbers",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated phone numbers",
              "title": "Phone Numbers"
            },
            "description": "Comma-separated phone numbers"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/meta/conversations/{instance_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Conversation Analytics",
        "description": "Get conversation analytics (count/cost by category/type) from Meta",
        "operationId": "get_conversation_analytics_analytics_meta_conversations__instance_id__get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Start timestamp (Unix)",
              "title": "Start"
            },
            "description": "Start timestamp (Unix)"
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End timestamp (Unix)",
              "title": "End"
            },
            "description": "End timestamp (Unix)"
          },
          {
            "name": "granularity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Granularity: HALF_HOUR, DAILY, MONTHLY",
              "default": "DAILY",
              "title": "Granularity"
            },
            "description": "Granularity: HALF_HOUR, DAILY, MONTHLY"
          },
          {
            "name": "dimensions",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated dimensions: CONVERSATION_CATEGORY,CONVERSATION_TYPE,COUNTRY,PHONE",
              "title": "Dimensions"
            },
            "description": "Comma-separated dimensions: CONVERSATION_CATEGORY,CONVERSATION_TYPE,COUNTRY,PHONE"
          },
          {
            "name": "phone_numbers",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated phone numbers",
              "title": "Phone Numbers"
            },
            "description": "Comma-separated phone numbers"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/meta/pricing/{instance_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Pricing Analytics",
        "description": "Get pricing analytics (costs by type/category) from Meta",
        "operationId": "get_pricing_analytics_analytics_meta_pricing__instance_id__get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Start timestamp (Unix)",
              "title": "Start"
            },
            "description": "Start timestamp (Unix)"
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End timestamp (Unix)",
              "title": "End"
            },
            "description": "End timestamp (Unix)"
          },
          {
            "name": "granularity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Granularity: HALF_HOUR, DAILY, MONTHLY",
              "default": "DAILY",
              "title": "Granularity"
            },
            "description": "Granularity: HALF_HOUR, DAILY, MONTHLY"
          },
          {
            "name": "dimensions",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated dimensions: PRICING_TYPE,PRICING_CATEGORY,COUNTRY,PHONE",
              "title": "Dimensions"
            },
            "description": "Comma-separated dimensions: PRICING_TYPE,PRICING_CATEGORY,COUNTRY,PHONE"
          },
          {
            "name": "phone_numbers",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated phone numbers",
              "title": "Phone Numbers"
            },
            "description": "Comma-separated phone numbers"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/meta/templates/{instance_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Template Analytics",
        "description": "Get template analytics (per-template performance) from Meta",
        "operationId": "get_template_analytics_analytics_meta_templates__instance_id__get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Start timestamp (Unix)",
              "title": "Start"
            },
            "description": "Start timestamp (Unix)"
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End timestamp (Unix)",
              "title": "End"
            },
            "description": "End timestamp (Unix)"
          },
          {
            "name": "template_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated template IDs (max 10)",
              "title": "Template Ids"
            },
            "description": "Comma-separated template IDs (max 10)"
          },
          {
            "name": "metric_types",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated metrics",
              "default": "SENT,DELIVERED,READ,CLICKED",
              "title": "Metric Types"
            },
            "description": "Comma-separated metrics"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/meta/template-groups/{instance_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Template Group Analytics",
        "description": "Get template group analytics (per-group performance) from Meta",
        "operationId": "get_template_group_analytics_analytics_meta_template_groups__instance_id__get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Start timestamp (Unix)",
              "title": "Start"
            },
            "description": "Start timestamp (Unix)"
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End timestamp (Unix)",
              "title": "End"
            },
            "description": "End timestamp (Unix)"
          },
          {
            "name": "group_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated group IDs (max 10)",
              "title": "Group Ids"
            },
            "description": "Comma-separated group IDs (max 10)"
          },
          {
            "name": "metric_types",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated metrics",
              "default": "SENT,DELIVERED,READ",
              "title": "Metric Types"
            },
            "description": "Comma-separated metrics"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/overview/{instance_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Instance Overview",
        "description": "Get analytics overview for a WhatsApp instance",
        "operationId": "get_instance_overview_analytics_overview__instance_id__get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "time_range",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "7d",
              "title": "Time Range"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverviewResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/stats/{instance_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Instance Stats",
        "description": "Get detailed statistics for an instance",
        "operationId": "get_instance_stats_analytics_stats__instance_id__get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "time_range",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "7d",
              "title": "Time Range"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/performance/{instance_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Performance Metrics",
        "description": "Get performance metrics for an instance",
        "operationId": "get_performance_metrics_analytics_performance__instance_id__get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceMetrics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/meta/enable-insights/{instance_id}": {
      "post": {
        "tags": [
          "analytics"
        ],
        "summary": "Enable Template Insights",
        "description": "Enable template insights for WhatsApp Business Account",
        "operationId": "enable_template_insights_analytics_meta_enable_insights__instance_id__post",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/meta/status/{instance_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Analytics Status",
        "description": "Check analytics status and capabilities for WhatsApp Business Account",
        "operationId": "get_analytics_status_analytics_meta_status__instance_id__get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/db/status-analytics/{instance_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Status Analytics",
        "description": "Get detailed message status analytics from database",
        "operationId": "get_status_analytics_analytics_db_status_analytics__instance_id__get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "time_range",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Time range: 24h, 7d, 30d, 90d",
              "default": "7d",
              "title": "Time Range"
            },
            "description": "Time range: 24h, 7d, 30d, 90d"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/db/message-flow/{instance_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Message Flow Analytics",
        "description": "Get message flow analytics showing sent vs received patterns",
        "operationId": "get_message_flow_analytics_analytics_db_message_flow__instance_id__get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "time_range",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Time range: 24h, 7d, 30d, 90d",
              "default": "7d",
              "title": "Time Range"
            },
            "description": "Time range: 24h, 7d, 30d, 90d"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/db/template-analytics/{instance_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Template Analytics Db",
        "description": "Get template performance analytics from database with accurate webhook-based delivery stats",
        "operationId": "get_template_analytics_db_analytics_db_template_analytics__instance_id__get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "time_range",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Time range: 24h, 7d, 30d, 90d",
              "default": "7d",
              "title": "Time Range"
            },
            "description": "Time range: 24h, 7d, 30d, 90d"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/db/recipient-analytics/{instance_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Recipient Analytics",
        "description": "Get recipient interaction analytics with accurate webhook-based delivery data",
        "operationId": "get_recipient_analytics_analytics_db_recipient_analytics__instance_id__get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "time_range",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Time range: 24h, 7d, 30d, 90d",
              "default": "7d",
              "title": "Time Range"
            },
            "description": "Time range: 24h, 7d, 30d, 90d"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/db/webhook-analytics/{instance_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Webhook Analytics",
        "description": "Get webhook event analytics",
        "operationId": "get_webhook_analytics_analytics_db_webhook_analytics__instance_id__get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "time_range",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Time range: 24h, 7d, 30d, 90d",
              "default": "7d",
              "title": "Time Range"
            },
            "description": "Time range: 24h, 7d, 30d, 90d"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test-html": {
      "get": {
        "summary": "Get Html",
        "operationId": "get_html_test_html_get",
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Read Root",
        "operationId": "read_root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessTokenCreate": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "example": "Token for my mobile app"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          }
        },
        "type": "object",
        "title": "AccessTokenCreate",
        "description": "Fields needed to create a new token (the user might provide\na description or expiry date)."
      },
      "AccessTokenLogPaginatedResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AccessTokenLogResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "page_size"
        ],
        "title": "AccessTokenLogPaginatedResponse"
      },
      "AccessTokenLogResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "token_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Token Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid4",
            "title": "User Id"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "used_at": {
            "type": "string",
            "format": "date-time",
            "title": "Used At"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "id",
          "token_id",
          "user_id",
          "used_at"
        ],
        "title": "AccessTokenLogResponse",
        "description": "Response model for logging token usage, etc."
      },
      "AccessTokenResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid4",
            "title": "User Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "token_value": {
            "type": "string",
            "title": "Token Value"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "active": {
            "type": "boolean",
            "title": "Active"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "token_value",
          "created_at",
          "updated_at",
          "active"
        ],
        "title": "AccessTokenResponse",
        "description": "Response model for returning token details to the user."
      },
      "AccessTokenUpdate": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "example": "Token for my mobile app"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active"
          }
        },
        "type": "object",
        "title": "AccessTokenUpdate",
        "description": "Fields for updating an existing token\n(e.g., to change expiry or description)."
      },
      "AppCallbackSettings": {
        "properties": {
          "app_id": {
            "type": "integer",
            "title": "App Id",
            "description": "The ID of the app in the App Basic Settings"
          },
          "app_access_token": {
            "type": "string",
            "title": "App Access Token",
            "description": "The app access token from get_app_access_token()"
          },
          "callback_url": {
            "type": "string",
            "title": "Callback Url",
            "description": "The URL to receive the webhook"
          },
          "verify_token": {
            "type": "string",
            "title": "Verify Token",
            "description": "The token to verify the webhook"
          },
          "fields": {
            "items": {
              "$ref": "#/components/schemas/SubscriptionField"
            },
            "type": "array",
            "title": "Fields",
            "description": "The fields to subscribe to for webhooks. Available fields: account_alerts, account_review_update, account_update, business_capability_update, message_template_components_update, message_template_quality_update, message_template_status_update, messages, phone_number_name_update, phone_number_quality_update, security, template_category_update."
          }
        },
        "type": "object",
        "required": [
          "app_id",
          "app_access_token",
          "callback_url",
          "verify_token",
          "fields"
        ],
        "title": "AppCallbackSettings"
      },
      "AssignSubscriptionRequest": {
        "properties": {
          "plan_name": {
            "type": "string",
            "title": "Plan Name"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "plan_name"
        ],
        "title": "AssignSubscriptionRequest",
        "description": "Schema for assigning a subscription to a user."
      },
      "BlockContactRequest": {
        "properties": {
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason",
            "description": "Reason for blocking the contact"
          }
        },
        "type": "object",
        "title": "BlockContactRequest",
        "description": "Request model for blocking a contact"
      },
      "Body_login_auth_login_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^password$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login_auth_login_post"
      },
      "BulkSendMessageRequest": {
        "properties": {
          "instance_id": {
            "type": "string",
            "format": "uuid",
            "title": "Instance Id",
            "description": "ID of the Instance from which to send."
          },
          "message_type": {
            "$ref": "#/components/schemas/MessageType"
          },
          "recipient": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipient",
            "description": "Ignored for bulk requests - use recipients instead"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source",
            "description": "Source of the message (e.g., 'shopify', 'website', etc.)"
          },
          "reply_to_message_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reply To Message Id"
          },
          "tracker": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tracker"
          },
          "buttons": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PyWaButtonWrapper"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Buttons"
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          },
          "header": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Header"
          },
          "footer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Footer"
          },
          "preview_url": {
            "type": "boolean",
            "title": "Preview Url",
            "default": false
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "image_caption": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Caption"
          },
          "image_mime_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Mime Type"
          },
          "video_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Url"
          },
          "video_caption": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Caption"
          },
          "video_mime_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Mime Type"
          },
          "audio_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Url"
          },
          "audio_mime_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Mime Type"
          },
          "document_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Url"
          },
          "document_filename": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Filename"
          },
          "document_caption": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Caption"
          },
          "document_mime_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Mime Type"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "location_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Name"
          },
          "location_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Address"
          },
          "request_location_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Location Text"
          },
          "contacts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ContactItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contacts"
          },
          "sticker_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sticker Url"
          },
          "sticker_mime_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sticker Mime Type"
          },
          "catalog_body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Body"
          },
          "catalog_footer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Footer"
          },
          "catalog_thumbnail_product_sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Thumbnail Product Sku"
          },
          "template_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TemplateData"
              },
              {
                "type": "null"
              }
            ]
          },
          "product_catalog_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Catalog Id"
          },
          "product_sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Sku"
          },
          "product_body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Body"
          },
          "product_footer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Footer"
          },
          "products_list_catalog_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Products List Catalog Id"
          },
          "products_list_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Products List Title"
          },
          "products_list_body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Products List Body"
          },
          "products_list_footer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Products List Footer"
          },
          "product_sections": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ProductsSection"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Sections"
          },
          "reaction_emoji": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reaction Emoji"
          },
          "reaction_message_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reaction Message Id"
          },
          "remove_reaction_message_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remove Reaction Message Id"
          },
          "recipients": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recipients",
            "description": "List of WhatsApp phone numbers (E.164). Max 10 recipients."
          }
        },
        "type": "object",
        "required": [
          "instance_id",
          "message_type",
          "recipients"
        ],
        "title": "BulkSendMessageRequest",
        "description": "Extends SendMessageRequest to support sending messages to multiple recipients.\nWhen using this model, the 'recipient' field from SendMessageRequest is ignored."
      },
      "BulkSendMessageResponse": {
        "properties": {
          "responses": {
            "items": {
              "$ref": "#/components/schemas/SendMessageResponse"
            },
            "type": "array",
            "title": "Responses"
          },
          "total_sent": {
            "type": "integer",
            "title": "Total Sent"
          },
          "total_failed": {
            "type": "integer",
            "title": "Total Failed"
          }
        },
        "type": "object",
        "required": [
          "responses",
          "total_sent",
          "total_failed"
        ],
        "title": "BulkSendMessageResponse",
        "description": "Response after sending bulk messages, containing responses for each recipient."
      },
      "ButtonType": {
        "type": "string",
        "enum": [
          "QUICK_REPLY",
          "URL",
          "PHONE_NUMBER",
          "COPY_CODE",
          "OTP",
          "FLOW",
          "MPM",
          "SPM"
        ],
        "title": "ButtonType",
        "description": "Types of buttons available in templates"
      },
      "ChangePlanRequest": {
        "properties": {
          "new_plan_id": {
            "type": "string",
            "title": "New Plan Id"
          },
          "proration_behavior": {
            "type": "string",
            "title": "Proration Behavior",
            "default": "create_prorations"
          }
        },
        "type": "object",
        "required": [
          "new_plan_id"
        ],
        "title": "ChangePlanRequest"
      },
      "ChatConversationResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Conversation ID (normalized phone number)"
          },
          "wa_id": {
            "type": "string",
            "title": "Wa Id",
            "description": "WhatsApp ID (display phone number)"
          },
          "contact_info": {
            "$ref": "#/components/schemas/ContactInfo"
          },
          "last_message": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LastMessage"
              },
              {
                "type": "null"
              }
            ],
            "description": "Last message in conversation"
          },
          "last_message_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Message Time",
            "description": "Last message timestamp (ISO format)"
          },
          "unread_count": {
            "type": "integer",
            "maximum": 99.0,
            "minimum": 0.0,
            "title": "Unread Count",
            "description": "Number of unread messages (capped at 99)",
            "default": 0
          },
          "customer_service_window": {
            "$ref": "#/components/schemas/CustomerServiceWindow"
          }
        },
        "type": "object",
        "required": [
          "id",
          "wa_id",
          "contact_info",
          "customer_service_window"
        ],
        "title": "ChatConversationResponse",
        "description": "Chat conversation response model"
      },
      "ChatMessageMetadata": {
        "properties": {
          "source": {
            "type": "string",
            "title": "Source",
            "description": "Message source (messages/webhook)"
          },
          "response_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Data",
            "description": "Raw response data"
          },
          "raw_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Raw Data",
            "description": "Raw webhook data"
          }
        },
        "type": "object",
        "required": [
          "source"
        ],
        "title": "ChatMessageMetadata",
        "description": "Metadata for a chat message"
      },
      "ChatMessageResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Message ID"
          },
          "direction": {
            "type": "string",
            "title": "Direction",
            "description": "Message direction (incoming/outgoing)"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Message content"
          },
          "message_type": {
            "type": "string",
            "title": "Message Type",
            "description": "Message type"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Message timestamp"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Message status"
          },
          "wa_message_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Wa Message Id",
            "description": "WhatsApp message ID"
          },
          "metadata": {
            "$ref": "#/components/schemas/ChatMessageMetadata"
          },
          "is_outgoing": {
            "type": "boolean",
            "title": "Is Outgoing",
            "description": "Whether message is outgoing"
          },
          "template_structure": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TemplateStructure"
              },
              {
                "type": "null"
              }
            ],
            "description": "Template structure for template messages"
          },
          "search_highlights": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SearchHighlight"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search Highlights",
            "description": "Search highlights for text matching"
          }
        },
        "type": "object",
        "required": [
          "id",
          "direction",
          "content",
          "message_type",
          "timestamp",
          "status",
          "metadata",
          "is_outgoing"
        ],
        "title": "ChatMessageResponse",
        "description": "Chat message response model"
      },
      "ContactAddress": {
        "properties": {
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Street"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          },
          "zip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zip"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          }
        },
        "type": "object",
        "title": "ContactAddress"
      },
      "ContactBlockResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Result message"
          },
          "contact_id": {
            "type": "string",
            "title": "Contact Id",
            "description": "Contact ID"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "contact_id"
        ],
        "title": "ContactBlockResponse",
        "description": "Response model for contact blocking/unblocking operations"
      },
      "ContactCreate": {
        "properties": {
          "phone_number": {
            "type": "string",
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "title": "Phone Number"
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "instance_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instance Id"
          }
        },
        "type": "object",
        "required": [
          "phone_number",
          "name"
        ],
        "title": "ContactCreate"
      },
      "ContactEmail": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "ContactEmail"
      },
      "ContactInfo": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Contact name"
          },
          "phone": {
            "type": "string",
            "title": "Phone",
            "description": "Contact phone number"
          }
        },
        "type": "object",
        "required": [
          "phone"
        ],
        "title": "ContactInfo",
        "description": "Contact information"
      },
      "ContactItem": {
        "properties": {
          "name": {
            "$ref": "#/components/schemas/ContactName"
          },
          "phones": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ContactPhone"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phones"
          },
          "emails": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ContactEmail"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emails"
          },
          "urls": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ContactUrl"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Urls"
          },
          "addresses": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ContactAddress"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Addresses"
          },
          "org": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContactOrg"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ContactItem",
        "description": "A single contact item, matching pywa.types.Contact structure."
      },
      "ContactName": {
        "properties": {
          "formatted_name": {
            "type": "string",
            "title": "Formatted Name"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          }
        },
        "type": "object",
        "required": [
          "formatted_name"
        ],
        "title": "ContactName"
      },
      "ContactOrg": {
        "properties": {
          "company": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company"
          },
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          }
        },
        "type": "object",
        "title": "ContactOrg"
      },
      "ContactPhone": {
        "properties": {
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "wa_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Wa Id"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "phone"
        ],
        "title": "ContactPhone"
      },
      "ContactResponse": {
        "properties": {
          "phone_number": {
            "type": "string",
            "pattern": "^\\+[1-9]\\d{1,14}$",
            "title": "Phone Number"
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "instance_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instance Id"
          },
          "is_blocked": {
            "type": "boolean",
            "title": "Is Blocked"
          },
          "blocked_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blocked At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "phone_number",
          "name",
          "id",
          "user_id",
          "instance_id",
          "is_blocked",
          "blocked_at",
          "created_at",
          "updated_at"
        ],
        "title": "ContactResponse"
      },
      "ContactUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "ContactUpdate"
      },
      "ContactUpdateCreate": {
        "properties": {
          "update_text": {
            "type": "string",
            "minLength": 1,
            "title": "Update Text"
          }
        },
        "type": "object",
        "required": [
          "update_text"
        ],
        "title": "ContactUpdateCreate"
      },
      "ContactUpdateResponse": {
        "properties": {
          "update_text": {
            "type": "string",
            "minLength": 1,
            "title": "Update Text"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "contact_id": {
            "type": "string",
            "format": "uuid",
            "title": "Contact Id"
          },
          "instance_id": {
            "type": "string",
            "format": "uuid",
            "title": "Instance Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "update_text",
          "id",
          "contact_id",
          "instance_id",
          "created_at",
          "updated_at"
        ],
        "title": "ContactUpdateResponse"
      },
      "ContactUrl": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "ContactUrl"
      },
      "ConversationMessagesResponse": {
        "properties": {
          "messages": {
            "items": {
              "$ref": "#/components/schemas/ChatMessageResponse"
            },
            "type": "array",
            "title": "Messages"
          },
          "pagination": {
            "$ref": "#/components/schemas/MessagesPaginationResponse"
          },
          "customer_service_window": {
            "$ref": "#/components/schemas/CustomerServiceWindow"
          },
          "search": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SearchMetadata"
              },
              {
                "type": "null"
              }
            ],
            "description": "Search metadata (only present when search is performed)"
          }
        },
        "type": "object",
        "required": [
          "messages",
          "pagination",
          "customer_service_window"
        ],
        "title": "ConversationMessagesResponse",
        "description": "Response model for conversation messages"
      },
      "ConversationsPaginationResponse": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of conversations"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page",
            "description": "Number of conversations per page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages",
            "description": "Total number of pages"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next",
            "description": "Whether there are more pages"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev",
            "description": "Whether there are previous pages"
          }
        },
        "type": "object",
        "required": [
          "total",
          "page",
          "per_page",
          "total_pages",
          "has_next",
          "has_prev"
        ],
        "title": "ConversationsPaginationResponse",
        "description": "Pagination metadata for conversations"
      },
      "ConversationsResponse": {
        "properties": {
          "conversations": {
            "items": {
              "$ref": "#/components/schemas/ChatConversationResponse"
            },
            "type": "array",
            "title": "Conversations",
            "description": "List of chat conversations"
          },
          "pagination": {
            "$ref": "#/components/schemas/ConversationsPaginationResponse",
            "description": "Pagination metadata"
          }
        },
        "type": "object",
        "required": [
          "conversations",
          "pagination"
        ],
        "title": "ConversationsResponse",
        "description": "Response model for conversations list"
      },
      "CreateTemplateRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Unique name for the template. Must contain only lowercase letters and underscores."
          },
          "category": {
            "type": "string",
            "title": "Category",
            "description": "Category for the template: AUTHENTICATION, MARKETING, UTILITY."
          },
          "language": {
            "$ref": "#/components/schemas/LanguageEnum",
            "description": "Language code, e.g. en_US."
          },
          "allow_category_change": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allow Category Change",
            "description": "If True, let Meta auto-change category if needed.",
            "default": false
          },
          "parameter_format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameter Format",
            "description": "NAMED or POSITIONAL for placeholders in BODY/HEADER.",
            "default": "POSITIONAL"
          },
          "message_send_ttl_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message Send Ttl Seconds"
          },
          "components": {
            "items": {
              "$ref": "#/components/schemas/TemplateComponent-Input"
            },
            "type": "array",
            "title": "Components",
            "description": "List of components making up the template."
          }
        },
        "type": "object",
        "required": [
          "name",
          "category",
          "language",
          "components"
        ],
        "title": "CreateTemplateRequest",
        "description": "For the \"create template\" operation.\nThis matches the Graph API body for POST /<BUSINESS_ACCOUNT_ID>/message_templates"
      },
      "CreateTemplateResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "category": {
            "type": "string",
            "title": "Category"
          }
        },
        "type": "object",
        "required": [
          "id",
          "status",
          "category"
        ],
        "title": "CreateTemplateResponse",
        "description": "Response from the Meta endpoint after creating a template.\nTypically returns: { \"id\": \"...\", \"status\": \"...\", \"category\": \"...\" }"
      },
      "CreateUnsubscribeCodeRequest": {
        "properties": {
          "phone_number": {
            "type": "string",
            "title": "Phone Number",
            "description": "Phone number in E.164 format (e.g., +1234567890)"
          },
          "instance_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Instance Id",
            "description": "Instance ID that must belong to the authenticated user"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source",
            "description": "Source of the request (e.g., 'shopify', 'website')"
          }
        },
        "type": "object",
        "required": [
          "phone_number",
          "instance_id"
        ],
        "title": "CreateUnsubscribeCodeRequest",
        "description": "Request model for creating unsubscribe codes by phone number and instance"
      },
      "CreateUnsubscribeCodeResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "unsubscribe_code": {
            "type": "string",
            "title": "Unsubscribe Code",
            "description": "Generated unsubscribe code"
          },
          "unsubscribe_url": {
            "type": "string",
            "title": "Unsubscribe Url",
            "description": "Complete unsubscribe URL"
          },
          "contact_id": {
            "type": "string",
            "title": "Contact Id",
            "description": "Contact ID (created or existing)"
          },
          "contact_created": {
            "type": "boolean",
            "title": "Contact Created",
            "description": "Whether a new contact was created"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Success message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "unsubscribe_code",
          "unsubscribe_url",
          "contact_id",
          "contact_created",
          "message"
        ],
        "title": "CreateUnsubscribeCodeResponse",
        "description": "Response model for creating unsubscribe codes"
      },
      "CustomerServiceWindow": {
        "properties": {
          "is_open": {
            "type": "boolean",
            "title": "Is Open",
            "description": "Whether the 24-hour window is open"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "When the window expires"
          },
          "can_send_freeform": {
            "type": "boolean",
            "title": "Can Send Freeform",
            "description": "Whether freeform messages can be sent"
          },
          "restriction_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Restriction Reason",
            "description": "Reason if restricted"
          }
        },
        "type": "object",
        "required": [
          "is_open",
          "can_send_freeform"
        ],
        "title": "CustomerServiceWindow",
        "description": "Customer service window information"
      },
      "DailyTrend": {
        "properties": {
          "date": {
            "type": "string",
            "title": "Date"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "date",
          "count"
        ],
        "title": "DailyTrend"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Industry": {
        "type": "string",
        "enum": [
          "UNDEFINED",
          "OTHER",
          "AUTO",
          "BEAUTY",
          "APPAREL",
          "EDU",
          "ENTERTAIN",
          "EVENT_PLAN",
          "FINANCE",
          "GROCERY",
          "GOVT",
          "HOTEL",
          "HEALTH",
          "NONPROFIT",
          "PROF_SERVICES",
          "RETAIL",
          "TRAVEL",
          "RESTAURANT",
          "NOT_A_BIZ"
        ],
        "title": "Industry",
        "description": "Represents the industry of a business.\n\nAttributes:\n    UNDEFINED: Undefined.\n    OTHER: Other.\n    AUTO: Automotive.\n    BEAUTY: Beauty.\n    APPAREL: Apparel.\n    EDU: Education.\n    ENTERTAIN: Entertainment.\n    EVENT_PLAN: Event planning.\n    FINANCE: Finance.\n    GROCERY: Grocery store.\n    GOVT: Government.\n    HOTEL: Hotel.\n    HEALTH: Health.\n    NONPROFIT: Nonprofit.\n    PROF_SERVICES: Professional services.\n    RETAIL: Retail.\n    TRAVEL: Travel.\n    RESTAURANT: Restaurant.\n    NOT_A_BIZ: Not a business."
      },
      "InstanceCreate": {
        "properties": {
          "nickname": {
            "type": "string",
            "maxLength": 50,
            "title": "Nickname",
            "example": "My Business WhatsApp"
          },
          "phone_id": {
            "type": "string",
            "minLength": 3,
            "title": "Phone Id",
            "example": "1234567890"
          },
          "api_key": {
            "type": "string",
            "minLength": 3,
            "title": "Api Key",
            "example": "supersecretapikey"
          },
          "app_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Id",
            "example": "1234567890"
          },
          "app_secret": {
            "anyOf": [
              {
                "type": "string",
                "format": "password",
                "writeOnly": true
              },
              {
                "type": "null"
              }
            ],
            "title": "App Secret",
            "example": "supersecret123"
          },
          "business_account_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "password",
                "writeOnly": true
              },
              {
                "type": "null"
              }
            ],
            "title": "Business Account Id",
            "example": "1234567890"
          }
        },
        "type": "object",
        "required": [
          "nickname",
          "phone_id",
          "api_key"
        ],
        "title": "InstanceCreate"
      },
      "InstanceResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "nickname": {
            "type": "string",
            "title": "Nickname"
          },
          "phone_id": {
            "type": "string",
            "title": "Phone Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "last_active": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Active"
          },
          "api_key": {
            "type": "string",
            "title": "Api Key"
          },
          "app_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Id"
          },
          "app_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Secret"
          },
          "business_account_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Business Account Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "nickname",
          "phone_id",
          "created_at",
          "updated_at",
          "api_key"
        ],
        "title": "InstanceResponse"
      },
      "InstanceUpdate": {
        "properties": {
          "nickname": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Nickname"
          },
          "phone_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Id"
          },
          "api_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Key"
          },
          "app_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Id"
          },
          "app_secret": {
            "anyOf": [
              {
                "type": "string",
                "format": "password",
                "writeOnly": true
              },
              {
                "type": "null"
              }
            ],
            "title": "App Secret"
          },
          "business_account_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "password",
                "writeOnly": true
              },
              {
                "type": "null"
              }
            ],
            "title": "Business Account Id"
          }
        },
        "type": "object",
        "title": "InstanceUpdate"
      },
      "LanguageEnum": {
        "type": "string",
        "enum": [
          "af",
          "sq",
          "ar",
          "ar_EG",
          "ar_AE",
          "ar_LB",
          "ar_MA",
          "ar_QA",
          "az",
          "be_BY",
          "bn",
          "bn_IN",
          "bg",
          "ca",
          "zh_CN",
          "zh_HK",
          "zh_TW",
          "hr",
          "cs",
          "da",
          "prs_AF",
          "nl",
          "nl_BE",
          "en",
          "en_US",
          "en_GB",
          "en_AU",
          "en_CA",
          "en_GH",
          "en_IE",
          "en_IN",
          "en_JM",
          "en_MY",
          "en_NZ",
          "en_QA",
          "en_SG",
          "en_ZA",
          "et",
          "fil",
          "fi",
          "fr",
          "fr_BE",
          "fr_CA",
          "fr_CH",
          "fr_CI",
          "fr_MA",
          "ka",
          "de",
          "de_AT",
          "de_CH",
          "el",
          "gu",
          "ha",
          "he",
          "hi",
          "hu",
          "id",
          "ga",
          "it",
          "ja",
          "kn",
          "kk",
          "rw_RW",
          "ko",
          "ky_KG",
          "lo",
          "lv",
          "lt",
          "mk",
          "ms",
          "ml",
          "mr",
          "nb",
          "ps_AF",
          "fa",
          "pl",
          "pt_BR",
          "pt_PT",
          "pa",
          "ro",
          "ru",
          "sr",
          "si_LK",
          "sk",
          "sl",
          "es",
          "es_AR",
          "es_CL",
          "es_CO",
          "es_CR",
          "es_DO",
          "es_EC",
          "es_HN",
          "es_MX",
          "es_PA",
          "es_PE",
          "es_ES",
          "es_UY",
          "sw",
          "sv",
          "ta",
          "te",
          "th",
          "tr",
          "uk",
          "ur",
          "uz",
          "vi",
          "zu"
        ],
        "title": "LanguageEnum",
        "description": "Enum for all supported languages in WhatsApp API."
      },
      "LastMessage": {
        "properties": {
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text",
            "description": "Message text content"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type",
            "description": "Message type (text, template, image, etc.)"
          },
          "direction": {
            "type": "string",
            "title": "Direction",
            "description": "Message direction (incoming/outgoing)"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "Message status (sent, delivered, read, failed, etc.)"
          }
        },
        "type": "object",
        "required": [
          "direction"
        ],
        "title": "LastMessage",
        "description": "Last message information"
      },
      "ListTemplatesItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "components": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TemplateComponent-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Components"
          },
          "message_send_ttl_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message Send Ttl Seconds"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "status"
        ],
        "title": "ListTemplatesItem",
        "description": "Single item in the list of templates (extended info)."
      },
      "ListTemplatesResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/ListTemplatesItem"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ListTemplatesResponse"
      },
      "LogType": {
        "type": "string",
        "enum": [
          "subscription_created",
          "subscription_renewed",
          "subscription_canceled",
          "subscription_expired",
          "payment_succeeded",
          "payment_failed",
          "stripe_webhook_received",
          "overage_charge",
          "trial_started",
          "trial_ended",
          "plan_changed"
        ],
        "title": "LogType",
        "description": "Types of subscription logs"
      },
      "LoginCredentials": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "LoginCredentials",
        "description": "Schema for JSON login credentials."
      },
      "MeUserUpdate": {
        "properties": {
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "pattern": "^[a-zA-Z0-9_]+$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "example": "john_doe"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "example": "user@example.com"
          }
        },
        "type": "object",
        "title": "MeUserUpdate",
        "description": "Schema for updating user details."
      },
      "MessageResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "instance_id": {
            "type": "string",
            "format": "uuid",
            "title": "Instance Id"
          },
          "recipient": {
            "type": "string",
            "title": "Recipient"
          },
          "message_type": {
            "$ref": "#/components/schemas/MessageType"
          },
          "status": {
            "$ref": "#/components/schemas/MessageStatus"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "payload": {
            "type": "object",
            "title": "Payload"
          },
          "response_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Data"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source"
          }
        },
        "type": "object",
        "required": [
          "id",
          "instance_id",
          "recipient",
          "message_type",
          "status",
          "created_at",
          "updated_at",
          "payload"
        ],
        "title": "MessageResponse",
        "description": "Response data for a single message"
      },
      "MessageStatus": {
        "type": "string",
        "enum": [
          "pending",
          "sent",
          "failed",
          "delivered",
          "read"
        ],
        "title": "MessageStatus"
      },
      "MessageType": {
        "type": "string",
        "enum": [
          "text",
          "image",
          "video",
          "audio",
          "document",
          "location",
          "request_location",
          "contact",
          "sticker",
          "catalog",
          "template",
          "product",
          "products_list",
          "reaction",
          "remove_reaction"
        ],
        "title": "MessageType"
      },
      "MessagesPaginationResponse": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of messages"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page",
            "description": "Number of messages per page"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More",
            "description": "Whether there are more messages"
          }
        },
        "type": "object",
        "required": [
          "total",
          "page",
          "per_page",
          "has_more"
        ],
        "title": "MessagesPaginationResponse",
        "description": "Pagination metadata for messages"
      },
      "MetaTemplateCategory": {
        "type": "string",
        "enum": [
          "AUTHENTICATION",
          "MARKETING",
          "UTILITY"
        ],
        "title": "MetaTemplateCategory",
        "description": "Meta WhatsApp template categories"
      },
      "OverviewResponse": {
        "properties": {
          "time_range": {
            "type": "string",
            "title": "Time Range"
          },
          "start_date": {
            "type": "string",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "title": "End Date"
          },
          "summary": {
            "$ref": "#/components/schemas/OverviewSummary"
          },
          "message_types": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Message Types"
          },
          "webhook_events": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Webhook Events"
          },
          "daily_trend": {
            "items": {
              "$ref": "#/components/schemas/DailyTrend"
            },
            "type": "array",
            "title": "Daily Trend"
          }
        },
        "type": "object",
        "required": [
          "time_range",
          "start_date",
          "end_date",
          "summary",
          "message_types",
          "webhook_events",
          "daily_trend"
        ],
        "title": "OverviewResponse"
      },
      "OverviewSummary": {
        "properties": {
          "total_messages": {
            "type": "integer",
            "title": "Total Messages"
          },
          "messages_sent": {
            "type": "integer",
            "title": "Messages Sent"
          },
          "messages_delivered": {
            "type": "integer",
            "title": "Messages Delivered"
          },
          "messages_read": {
            "type": "integer",
            "title": "Messages Read"
          },
          "messages_failed": {
            "type": "integer",
            "title": "Messages Failed"
          },
          "unique_contacts": {
            "type": "integer",
            "title": "Unique Contacts"
          },
          "delivery_rate": {
            "type": "number",
            "title": "Delivery Rate"
          },
          "read_rate": {
            "type": "number",
            "title": "Read Rate"
          }
        },
        "type": "object",
        "required": [
          "total_messages",
          "messages_sent",
          "messages_delivered",
          "messages_read",
          "messages_failed",
          "unique_contacts",
          "delivery_rate",
          "read_rate"
        ],
        "title": "OverviewSummary"
      },
      "PaginatedContactResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ContactResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "per_page",
          "total_pages"
        ],
        "title": "PaginatedContactResponse"
      },
      "PaginatedContactUpdateResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ContactUpdateResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "per_page",
          "total_pages"
        ],
        "title": "PaginatedContactUpdateResponse"
      },
      "PaginatedMessageResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "per_page",
          "total_pages"
        ],
        "title": "PaginatedMessageResponse",
        "description": "Paginated response containing message list and metadata"
      },
      "PaginatedPredefinedTemplateResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PredefinedTemplateResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "pages": {
            "type": "integer",
            "title": "Pages"
          },
          "background_init_status": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Background Init Status",
            "description": "Status of background template initialization process"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size",
          "pages"
        ],
        "title": "PaginatedPredefinedTemplateResponse",
        "description": "Schema for paginated list of predefined templates"
      },
      "PaginatedWebhookEventResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/WhatsAppWebhookEvent"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "per_page",
          "total_pages"
        ],
        "title": "PaginatedWebhookEventResponse",
        "description": "Paginated response for webhook events"
      },
      "ParameterFormat": {
        "type": "string",
        "enum": [
          "NAMED",
          "POSITIONAL"
        ],
        "title": "ParameterFormat",
        "description": "Parameter format options for WhatsApp templates"
      },
      "PaymentStatus": {
        "type": "string",
        "enum": [
          "pending",
          "succeeded",
          "failed",
          "canceled",
          "requires_payment_method",
          "requires_confirmation",
          "requires_action",
          "processing",
          "requires_capture"
        ],
        "title": "PaymentStatus",
        "description": "Stripe payment statuses"
      },
      "PerformanceMetrics": {
        "properties": {
          "avg_response_time": {
            "type": "number",
            "title": "Avg Response Time"
          },
          "error_rate": {
            "type": "number",
            "title": "Error Rate"
          },
          "total_messages_7d": {
            "type": "integer",
            "title": "Total Messages 7D"
          },
          "failed_messages_7d": {
            "type": "integer",
            "title": "Failed Messages 7D"
          },
          "uptime": {
            "type": "number",
            "title": "Uptime"
          },
          "last_active": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Active"
          }
        },
        "type": "object",
        "required": [
          "avg_response_time",
          "error_rate",
          "total_messages_7d",
          "failed_messages_7d",
          "uptime"
        ],
        "title": "PerformanceMetrics"
      },
      "PhoneCallbackDelete": {
        "properties": {
          "phone_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Id",
            "description": "The phone ID to delete the callback URL for (optional)"
          }
        },
        "type": "object",
        "title": "PhoneCallbackDelete"
      },
      "PhoneCallbackOverride": {
        "properties": {
          "callback_url": {
            "type": "string",
            "title": "Callback Url",
            "description": "The URL to receive the webhook"
          },
          "verify_token": {
            "type": "string",
            "title": "Verify Token",
            "description": "The token to verify the webhook"
          },
          "phone_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Id",
            "description": "The phone ID to override the callback URL for (optional)"
          }
        },
        "type": "object",
        "required": [
          "callback_url",
          "verify_token"
        ],
        "title": "PhoneCallbackOverride"
      },
      "PlanChangePreviewRequest": {
        "properties": {
          "new_plan_id": {
            "type": "string",
            "title": "New Plan Id"
          }
        },
        "type": "object",
        "required": [
          "new_plan_id"
        ],
        "title": "PlanChangePreviewRequest"
      },
      "PredefinedTemplateButton": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ButtonType"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "example": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example"
          }
        },
        "type": "object",
        "required": [
          "type",
          "text"
        ],
        "title": "PredefinedTemplateButton",
        "description": "Schema for template buttons"
      },
      "PredefinedTemplateCreate": {
        "properties": {
          "template_id": {
            "type": "string",
            "title": "Template Id",
            "description": "Unique identifier for the template"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Template name"
          },
          "category": {
            "$ref": "#/components/schemas/TemplateCategory",
            "description": "Template category"
          },
          "meta_category": {
            "$ref": "#/components/schemas/MetaTemplateCategory",
            "description": "WhatsApp Meta category"
          },
          "language": {
            "type": "string",
            "title": "Language",
            "description": "Template language (e.g., en_US, he)"
          },
          "header_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Header Type",
            "description": "Header type (text, image, document, etc.)"
          },
          "header_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Header Text",
            "description": "Header text content if applicable"
          },
          "body_text": {
            "type": "string",
            "title": "Body Text",
            "description": "Body text content"
          },
          "footer_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Footer Text",
            "description": "Footer text if applicable"
          },
          "buttons": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PredefinedTemplateButton"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Buttons",
            "description": "Button configuration"
          },
          "example_values": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Values",
            "description": "Example values for parameters"
          },
          "parameter_format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ParameterFormat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Parameter format (NAMED or POSITIONAL)"
          },
          "has_name_param": {
            "type": "boolean",
            "title": "Has Name Param",
            "description": "Whether template includes recipient name parameter",
            "default": false
          },
          "has_dynamic_url": {
            "type": "boolean",
            "title": "Has Dynamic Url",
            "description": "Whether template includes dynamic URL parameter",
            "default": false
          },
          "static_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Static Url",
            "description": "Static URL if applicable"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the template"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tags for filtering and organization"
          }
        },
        "type": "object",
        "required": [
          "template_id",
          "name",
          "category",
          "meta_category",
          "language",
          "body_text"
        ],
        "title": "PredefinedTemplateCreate",
        "description": "Schema for creating a new predefined template"
      },
      "PredefinedTemplateResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "template_id": {
            "type": "string",
            "title": "Template Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "category": {
            "$ref": "#/components/schemas/TemplateCategory"
          },
          "meta_category": {
            "$ref": "#/components/schemas/MetaTemplateCategory"
          },
          "language": {
            "type": "string",
            "title": "Language"
          },
          "header_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Header Type"
          },
          "header_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Header Text"
          },
          "body_text": {
            "type": "string",
            "title": "Body Text"
          },
          "footer_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Footer Text"
          },
          "buttons": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PredefinedTemplateButton"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Buttons"
          },
          "example_values": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Values"
          },
          "parameter_format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ParameterFormat"
              },
              {
                "type": "null"
              }
            ]
          },
          "has_name_param": {
            "type": "boolean",
            "title": "Has Name Param"
          },
          "has_dynamic_url": {
            "type": "boolean",
            "title": "Has Dynamic Url"
          },
          "static_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Static Url"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "template_id",
          "name",
          "category",
          "meta_category",
          "language",
          "body_text",
          "has_name_param",
          "has_dynamic_url",
          "created_at",
          "updated_at"
        ],
        "title": "PredefinedTemplateResponse",
        "description": "Schema for predefined template response"
      },
      "PredefinedTemplateUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TemplateCategory"
              },
              {
                "type": "null"
              }
            ]
          },
          "meta_category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MetaTemplateCategory"
              },
              {
                "type": "null"
              }
            ]
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "header_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Header Type"
          },
          "header_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Header Text"
          },
          "body_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Body Text"
          },
          "footer_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Footer Text"
          },
          "buttons": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PredefinedTemplateButton"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Buttons"
          },
          "example_values": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Values"
          },
          "parameter_format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ParameterFormat"
              },
              {
                "type": "null"
              }
            ]
          },
          "has_name_param": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Name Param"
          },
          "has_dynamic_url": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Dynamic Url"
          },
          "static_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Static Url"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "title": "PredefinedTemplateUpdate",
        "description": "Schema for updating an existing predefined template"
      },
      "ProductsSection": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "skus": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Skus"
          }
        },
        "type": "object",
        "required": [
          "title",
          "skus"
        ],
        "title": "ProductsSection",
        "description": "For PRODUCTS_LIST usage: define multiple sections with SKUs."
      },
      "PyWaButtonWrapper": {
        "properties": {
          "button_type": {
            "type": "string",
            "title": "Button Type",
            "description": "Type of the button (url, quick_reply, flow, etc.)"
          },
          "data": {
            "type": "string",
            "title": "Data",
            "description": "Button data such as URL, quick reply ID, etc."
          },
          "button": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "title": "Button"
          }
        },
        "type": "object",
        "required": [
          "button_type",
          "data"
        ],
        "title": "PyWaButtonWrapper",
        "description": "Pydantic-compatible wrapper for PyWa buttons with validation."
      },
      "RegistrationRequest": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 2,
            "title": "Name",
            "description": "Full name of the user"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "Valid email address"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number",
            "description": "Phone number in E.164 format (e.g., +1234567890)"
          },
          "phone_numbers_needed": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Numbers Needed",
            "description": "Optional: Number of phone numbers the user plans to use"
          },
          "has_meta_whatsapp_account": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Meta Whatsapp Account",
            "description": "Optional: Whether the user already has a Meta WhatsApp Business account"
          },
          "turnstile_token": {
            "type": "string",
            "title": "Turnstile Token",
            "description": "Cloudflare Turnstile verification token"
          },
          "terms_accepted": {
            "type": "boolean",
            "title": "Terms Accepted",
            "description": "User must accept terms of use and privacy policy"
          },
          "marketing_consent": {
            "type": "boolean",
            "title": "Marketing Consent",
            "description": "Optional: User consent for marketing communications",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "email",
          "phone_number",
          "turnstile_token",
          "terms_accepted"
        ],
        "title": "RegistrationRequest",
        "description": "Schema for user registration requests"
      },
      "RegistrationResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "default": true
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Success message",
            "default": "Registration request submitted successfully. We will contact you soon."
          },
          "registration_id": {
            "type": "string",
            "format": "uuid",
            "title": "Registration Id",
            "description": "Unique registration request ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp when the registration was created"
          }
        },
        "type": "object",
        "required": [
          "registration_id",
          "created_at"
        ],
        "title": "RegistrationResponse",
        "description": "Response schema for successful registration"
      },
      "SearchHighlight": {
        "properties": {
          "start": {
            "type": "integer",
            "title": "Start",
            "description": "Start position of highlight"
          },
          "end": {
            "type": "integer",
            "title": "End",
            "description": "End position of highlight"
          },
          "term": {
            "type": "string",
            "title": "Term",
            "description": "Search term that was matched"
          }
        },
        "type": "object",
        "required": [
          "start",
          "end",
          "term"
        ],
        "title": "SearchHighlight",
        "description": "Search highlight range in message content"
      },
      "SearchMetadata": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query",
            "description": "Search query that was performed"
          },
          "total_matches": {
            "type": "integer",
            "title": "Total Matches",
            "description": "Total number of matching messages"
          },
          "current_page_matches": {
            "type": "integer",
            "title": "Current Page Matches",
            "description": "Number of matches in current page"
          },
          "highlighted_messages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Highlighted Messages",
            "description": "List of message IDs with highlights"
          }
        },
        "type": "object",
        "required": [
          "query",
          "total_matches",
          "current_page_matches",
          "highlighted_messages"
        ],
        "title": "SearchMetadata",
        "description": "Search metadata for conversation messages"
      },
      "SendMessageRequest": {
        "properties": {
          "instance_id": {
            "type": "string",
            "format": "uuid",
            "title": "Instance Id",
            "description": "ID of the Instance from which to send."
          },
          "message_type": {
            "$ref": "#/components/schemas/MessageType"
          },
          "recipient": {
            "type": "string",
            "title": "Recipient",
            "description": "WhatsApp phone (E.164)."
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source",
            "description": "Source of the message (e.g., 'shopify', 'website', etc.)"
          },
          "reply_to_message_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reply To Message Id"
          },
          "tracker": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tracker"
          },
          "buttons": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PyWaButtonWrapper"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Buttons"
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          },
          "header": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Header"
          },
          "footer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Footer"
          },
          "preview_url": {
            "type": "boolean",
            "title": "Preview Url",
            "default": false
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "image_caption": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Caption"
          },
          "image_mime_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Mime Type"
          },
          "video_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Url"
          },
          "video_caption": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Caption"
          },
          "video_mime_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Mime Type"
          },
          "audio_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Url"
          },
          "audio_mime_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Mime Type"
          },
          "document_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Url"
          },
          "document_filename": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Filename"
          },
          "document_caption": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Caption"
          },
          "document_mime_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Mime Type"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "location_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Name"
          },
          "location_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Address"
          },
          "request_location_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Location Text"
          },
          "contacts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ContactItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contacts"
          },
          "sticker_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sticker Url"
          },
          "sticker_mime_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sticker Mime Type"
          },
          "catalog_body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Body"
          },
          "catalog_footer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Footer"
          },
          "catalog_thumbnail_product_sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Thumbnail Product Sku"
          },
          "template_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TemplateData"
              },
              {
                "type": "null"
              }
            ]
          },
          "product_catalog_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Catalog Id"
          },
          "product_sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Sku"
          },
          "product_body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Body"
          },
          "product_footer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Footer"
          },
          "products_list_catalog_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Products List Catalog Id"
          },
          "products_list_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Products List Title"
          },
          "products_list_body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Products List Body"
          },
          "products_list_footer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Products List Footer"
          },
          "product_sections": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ProductsSection"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Sections"
          },
          "reaction_emoji": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reaction Emoji"
          },
          "reaction_message_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reaction Message Id"
          },
          "remove_reaction_message_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remove Reaction Message Id"
          }
        },
        "type": "object",
        "required": [
          "instance_id",
          "message_type",
          "recipient"
        ],
        "title": "SendMessageRequest",
        "description": "Contains all fields required to send any type of message\nsupported by PyWa."
      },
      "SendMessageResponse": {
        "properties": {
          "message_id": {
            "type": "string",
            "format": "uuid",
            "title": "Message Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "detail": {
            "type": "string",
            "title": "Detail"
          }
        },
        "type": "object",
        "required": [
          "message_id",
          "status",
          "detail"
        ],
        "title": "SendMessageResponse",
        "description": "Response after sending a message, including the message record ID and status."
      },
      "StatsResponse": {
        "properties": {
          "time_range": {
            "type": "string",
            "title": "Time Range"
          },
          "start_date": {
            "type": "string",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "title": "End Date"
          },
          "status_timeline": {
            "additionalProperties": {
              "additionalProperties": {
                "type": "integer"
              },
              "type": "object"
            },
            "type": "object",
            "title": "Status Timeline"
          },
          "top_recipients": {
            "items": {
              "$ref": "#/components/schemas/TopRecipient"
            },
            "type": "array",
            "title": "Top Recipients"
          },
          "template_usage": {
            "items": {
              "$ref": "#/components/schemas/TemplateUsage"
            },
            "type": "array",
            "title": "Template Usage"
          },
          "hourly_distribution": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Hourly Distribution"
          }
        },
        "type": "object",
        "required": [
          "time_range",
          "start_date",
          "end_date",
          "status_timeline",
          "top_recipients",
          "template_usage",
          "hourly_distribution"
        ],
        "title": "StatsResponse"
      },
      "SubscriptionField": {
        "type": "string",
        "enum": [
          "account_alerts",
          "account_review_update",
          "account_update",
          "business_capability_update",
          "message_template_components_update",
          "message_template_quality_update",
          "message_template_status_update",
          "messages",
          "phone_number_name_update",
          "phone_number_quality_update",
          "security",
          "template_category_update"
        ],
        "title": "SubscriptionField"
      },
      "SubscriptionLogResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "plan_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Plan Id"
          },
          "subscription_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subscription Id"
          },
          "log_type": {
            "$ref": "#/components/schemas/LogType"
          },
          "status": {
            "$ref": "#/components/schemas/SubscriptionStatus"
          },
          "payment_status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "stripe_event_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stripe Event Id"
          },
          "stripe_event_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stripe Event Type"
          },
          "stripe_customer_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stripe Customer Id"
          },
          "stripe_subscription_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stripe Subscription Id"
          },
          "amount_cents": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Amount Cents"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency"
          },
          "messages_used": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Messages Used"
          },
          "instances_used": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instances Used"
          },
          "overage_messages": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Overage Messages"
          },
          "overage_charges_cents": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Overage Charges Cents"
          },
          "logged_at": {
            "type": "string",
            "format": "date-time",
            "title": "Logged At"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "example": "User upgraded to Pro plan"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "processed": {
            "type": "string",
            "title": "Processed",
            "default": "success"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "log_type",
          "status",
          "logged_at"
        ],
        "title": "SubscriptionLogResponse",
        "description": "Schema for returning subscription log details."
      },
      "SubscriptionStatus": {
        "type": "string",
        "enum": [
          "created",
          "renewed",
          "canceled",
          "expired",
          "active",
          "pending",
          "past_due",
          "trialing",
          "incomplete",
          "incomplete_expired",
          "paused"
        ],
        "title": "SubscriptionStatus"
      },
      "TemplateBodyComponent": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "Template body text with placeholders"
          },
          "parameters": {
            "items": {
              "$ref": "#/components/schemas/TemplateComponentParameter"
            },
            "type": "array",
            "title": "Parameters",
            "description": "Body parameters"
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "TemplateBodyComponent",
        "description": "Template body component"
      },
      "TemplateButtonComponent": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "description": "Button type (url, phone_number, quick_reply, copy_code, otp, flow)"
          },
          "text": {
            "type": "string",
            "title": "Text",
            "description": "Button text",
            "default": ""
          },
          "payload": {
            "type": "string",
            "title": "Payload",
            "description": "Button payload",
            "default": ""
          },
          "url": {
            "type": "string",
            "title": "Url",
            "description": "Button URL",
            "default": ""
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number",
            "description": "Button phone number",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "TemplateButtonComponent",
        "description": "Template button component"
      },
      "TemplateButtonParam": {
        "properties": {
          "button_type": {
            "type": "string",
            "title": "Button Type"
          },
          "data": {
            "type": "string",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "button_type",
          "data"
        ],
        "title": "TemplateButtonParam"
      },
      "TemplateButtonTypeEnum": {
        "type": "string",
        "enum": [
          "QUICK_REPLY",
          "URL",
          "PHONE_NUMBER",
          "OTP"
        ],
        "title": "TemplateButtonTypeEnum"
      },
      "TemplateCategory": {
        "type": "string",
        "enum": [
          "orders_create",
          "orders_paid",
          "orders_fulfilled",
          "orders_partially_fulfilled",
          "orders_updated",
          "orders_cancelled",
          "orders_edited",
          "carts_update",
          "carts_abandoned",
          "checkouts_create",
          "checkouts_update",
          "refunds_create",
          "customers_create",
          "customers_update",
          "customers_enable",
          "customers_disable",
          "otp",
          "welcome",
          "reminder",
          "follow_up",
          "promotion",
          "support",
          "review",
          "other"
        ],
        "title": "TemplateCategory",
        "description": "Enum for categorizing templates"
      },
      "TemplateComponent-Input": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateTypeEnum"
          },
          "format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TemplateFormatEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          },
          "example": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example"
          },
          "buttons": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TemplateComponentButton"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Buttons"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "TemplateComponent",
        "description": "Represents one component in the template creation:\ne.g. BODY, HEADER, FOOTER, BUTTONS, etc."
      },
      "TemplateComponent-Output": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateTypeEnum"
          },
          "format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TemplateFormatEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          },
          "example": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example"
          },
          "buttons": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TemplateComponentButton"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Buttons"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "TemplateComponent",
        "description": "Represents one component in the template creation:\ne.g. BODY, HEADER, FOOTER, BUTTONS, etc."
      },
      "TemplateComponentButton": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateButtonTypeEnum"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "otp_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Otp Type"
          },
          "zero_tap_terms_accepted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zero Tap Terms Accepted"
          },
          "example": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example"
          }
        },
        "type": "object",
        "required": [
          "type",
          "text"
        ],
        "title": "TemplateComponentButton"
      },
      "TemplateComponentParameter": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "description": "Parameter type (text, currency, date_time)"
          },
          "value": {
            "type": "string",
            "title": "Value",
            "description": "Parameter value"
          }
        },
        "type": "object",
        "required": [
          "type",
          "value"
        ],
        "title": "TemplateComponentParameter",
        "description": "Template component parameter"
      },
      "TemplateComponents": {
        "properties": {
          "header": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Header",
            "description": "Header component (text, image, video, document, location)"
          },
          "body": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TemplateBodyComponent"
              },
              {
                "type": "null"
              }
            ],
            "description": "Body component"
          },
          "footer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Footer",
            "description": "Footer text"
          },
          "buttons": {
            "items": {
              "$ref": "#/components/schemas/TemplateButtonComponent"
            },
            "type": "array",
            "title": "Buttons",
            "description": "Button components"
          }
        },
        "type": "object",
        "title": "TemplateComponents",
        "description": "Template components structure"
      },
      "TemplateData": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "language": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LanguageEnum"
              },
              {
                "type": "null"
              }
            ],
            "default": "en"
          },
          "header_params": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TemplateParam"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Header Params"
          },
          "body_params": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TemplateParam"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Body Params"
          },
          "button_params": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TemplateButtonParam"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Button Params"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "TemplateData"
      },
      "TemplateFormatEnum": {
        "type": "string",
        "enum": [
          "TEXT",
          "IMAGE",
          "VIDEO",
          "DOCUMENT",
          "LOCATION"
        ],
        "title": "TemplateFormatEnum"
      },
      "TemplateParam": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "default": "text"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "value"
        ],
        "title": "TemplateParam"
      },
      "TemplateStructure": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Template name"
          },
          "language": {
            "type": "string",
            "title": "Language",
            "description": "Template language code"
          },
          "components": {
            "$ref": "#/components/schemas/TemplateComponents",
            "description": "Template components"
          }
        },
        "type": "object",
        "required": [
          "name",
          "language",
          "components"
        ],
        "title": "TemplateStructure",
        "description": "WhatsApp template structure"
      },
      "TemplateTypeEnum": {
        "type": "string",
        "enum": [
          "BODY",
          "HEADER",
          "FOOTER",
          "BUTTONS"
        ],
        "title": "TemplateTypeEnum"
      },
      "TemplateUsage": {
        "properties": {
          "template_name": {
            "type": "string",
            "title": "Template Name"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "template_name",
          "count"
        ],
        "title": "TemplateUsage"
      },
      "TokenRequest": {
        "properties": {
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          },
          "refreshToken": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refreshtoken"
          },
          "refresh-token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh-Token"
          }
        },
        "type": "object",
        "title": "TokenRequest",
        "description": "Schema for refresh token requests."
      },
      "TopRecipient": {
        "properties": {
          "recipient": {
            "type": "string",
            "title": "Recipient"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "message_count": {
            "type": "integer",
            "title": "Message Count"
          }
        },
        "type": "object",
        "required": [
          "recipient",
          "name",
          "message_count"
        ],
        "title": "TopRecipient"
      },
      "UnblockContactRequest": {
        "properties": {
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason",
            "description": "Reason for unblocking the contact"
          }
        },
        "type": "object",
        "title": "UnblockContactRequest",
        "description": "Request model for unblocking a contact"
      },
      "UnsubscribeCodeResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "code": {
            "type": "string",
            "title": "Code",
            "description": "The unsubscribe code"
          },
          "unsubscribe_url": {
            "type": "string",
            "title": "Unsubscribe Url",
            "description": "Complete unsubscribe URL"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Success message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "code",
          "unsubscribe_url",
          "message"
        ],
        "title": "UnsubscribeCodeResponse",
        "description": "Response model for unsubscribe code operations"
      },
      "UnsubscribeProcessResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Result message"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number",
            "description": "Phone number that was unsubscribed"
          },
          "contact_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Id",
            "description": "Contact ID if contact exists"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "phone_number"
        ],
        "title": "UnsubscribeProcessResponse",
        "description": "Response model for processing unsubscribe requests"
      },
      "UpdateBusinessProfileRequest": {
        "properties": {
          "about": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 139,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "About",
            "description": "About text must be between 1 and 139 characters."
          },
          "address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 256
              },
              {
                "type": "null"
              }
            ],
            "title": "Address",
            "description": "Address of the business, up to 256 characters."
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 512
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the business, up to 512 characters."
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128,
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "Contact email address, up to 128 characters."
          },
          "profile_picture_handle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Picture Handle",
            "description": "Handle of the profile picture obtained via the Resumable Upload API."
          },
          "industry": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Industry"
              },
              {
                "type": "null"
              }
            ],
            "description": "Industry of the business."
          },
          "websites": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 256
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Websites",
            "description": "A list of up to 2 website URLs (each up to 256 characters). Must include http:// or https://."
          },
          "phone_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Id",
            "description": "Phone ID to update the business profile for (optional)."
          }
        },
        "type": "object",
        "title": "UpdateBusinessProfileRequest"
      },
      "UpdateCommerceSettingsRequest": {
        "properties": {
          "is_catalog_visible": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Catalog Visible",
            "description": "Whether the catalog is visible to customers."
          },
          "is_cart_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Cart Enabled",
            "description": "Whether the cart is enabled."
          },
          "phone_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Id",
            "description": "Optional phone ID to update the commerce settings for."
          }
        },
        "type": "object",
        "title": "UpdateCommerceSettingsRequest"
      },
      "UpdateSubscriptionRequest": {
        "properties": {
          "new_plan_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Plan Name"
          },
          "extend_days": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extend Days"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "UpdateSubscriptionRequest",
        "description": "Schema for updating a subscription (extend or change plan)."
      },
      "UpdateTemplateRequest": {
        "properties": {
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "components": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TemplateComponent-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Components"
          }
        },
        "type": "object",
        "title": "UpdateTemplateRequest",
        "description": "For the \"update template\" operation (POST /<TEMPLATE_ID>).\nWe can either update 'category' or 'components' or both."
      },
      "UserPasswordUpdate": {
        "properties": {
          "current_password": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16,
                "minLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Password",
            "example": "CurrentP@ss123"
          },
          "new_password": {
            "type": "string",
            "maxLength": 16,
            "minLength": 8,
            "title": "New Password",
            "example": "NewStr0ng@Pass"
          }
        },
        "type": "object",
        "required": [
          "new_password"
        ],
        "title": "UserPasswordUpdate",
        "description": "Schema for updating a user's password."
      },
      "UserResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Roles"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "last_login": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login"
          },
          "subscription": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subscription"
          },
          "active_instances": {
            "type": "integer",
            "title": "Active Instances"
          },
          "messages_sent": {
            "type": "object",
            "title": "Messages Sent"
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "roles",
          "created_at",
          "active_instances",
          "messages_sent"
        ],
        "title": "UserResponse",
        "description": "Schema for returning user details."
      },
      "UserUpdate": {
        "properties": {
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "pattern": "^[a-zA-Z0-9_]+$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "example": "john_doe"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "example": "user@example.com"
          },
          "roles": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 5
              },
              {
                "type": "null"
              }
            ],
            "title": "Roles"
          }
        },
        "type": "object",
        "title": "UserUpdate",
        "description": "Schema for updating user details."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WabaCallbackDelete": {
        "properties": {
          "waba_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Waba Id",
            "description": "The WhatsApp Business account ID (optional)"
          }
        },
        "type": "object",
        "title": "WabaCallbackDelete"
      },
      "WabaCallbackOverride": {
        "properties": {
          "callback_url": {
            "type": "string",
            "title": "Callback Url",
            "description": "The URL to receive the webhook"
          },
          "verify_token": {
            "type": "string",
            "title": "Verify Token",
            "description": "The token to verify the webhook"
          },
          "waba_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Waba Id",
            "description": "The WhatsApp Business account ID (optional)"
          }
        },
        "type": "object",
        "required": [
          "callback_url",
          "verify_token"
        ],
        "title": "WabaCallbackOverride"
      },
      "WhatsAppWebhookConfig": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "instance_id": {
            "type": "string",
            "format": "uuid",
            "title": "Instance Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "verify_token": {
            "type": "string",
            "title": "Verify Token"
          },
          "callback_url": {
            "type": "string",
            "title": "Callback Url"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "instance_id",
          "user_id",
          "verify_token",
          "callback_url",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "title": "WhatsAppWebhookConfig",
        "description": "Schema for a WhatsApp webhook configuration"
      },
      "WhatsAppWebhookConfigCreate": {
        "properties": {
          "instance_id": {
            "type": "string",
            "format": "uuid",
            "title": "Instance Id"
          },
          "verify_token": {
            "type": "string",
            "title": "Verify Token"
          },
          "callback_url": {
            "type": "string",
            "title": "Callback Url"
          }
        },
        "type": "object",
        "required": [
          "instance_id",
          "verify_token",
          "callback_url"
        ],
        "title": "WhatsAppWebhookConfigCreate",
        "description": "Schema for creating a WhatsApp webhook configuration"
      },
      "WhatsAppWebhookConfigUpdate": {
        "properties": {
          "verify_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verify Token"
          },
          "callback_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Callback Url"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "WhatsAppWebhookConfigUpdate",
        "description": "Schema for updating a WhatsApp webhook configuration"
      },
      "WhatsAppWebhookEvent": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "instance_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instance Id"
          },
          "event_type": {
            "type": "string",
            "title": "Event Type"
          },
          "event_field": {
            "type": "string",
            "title": "Event Field"
          },
          "event_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Timestamp"
          },
          "waba_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Waba Id"
          },
          "phone_number_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number Id"
          },
          "display_phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Phone Number"
          },
          "wa_message_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Wa Message Id"
          },
          "wa_sender_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Wa Sender Id"
          },
          "wa_recipient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Wa Recipient Id"
          },
          "message_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message Type"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "related_message_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Related Message Id"
          },
          "template_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Name"
          },
          "template_language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Language"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id"
          },
          "quality_score": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quality Score"
          },
          "decision": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Decision"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "max_conversations": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Conversations"
          },
          "max_phone_numbers": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Phone Numbers"
          },
          "security_event": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Security Event"
          },
          "requester_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requester Id"
          },
          "raw_data": {
            "type": "object",
            "title": "Raw Data"
          },
          "is_identified": {
            "type": "boolean",
            "title": "Is Identified",
            "default": false
          },
          "processed": {
            "type": "boolean",
            "title": "Processed",
            "default": false
          },
          "processing_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Error"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "event_type",
          "event_field",
          "raw_data",
          "created_at",
          "updated_at"
        ],
        "title": "WhatsAppWebhookEvent",
        "description": "Enhanced schema for a WhatsApp webhook event"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "auth/login"
          }
        }
      }
    }
  }
}